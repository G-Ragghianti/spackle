#!/bin/bash -e

SRC=$1
DEST=$2

if [ -z $SRC ]; then
  echo Usage: install SOURCE_DIR \[DESTINATION_DIR\]
  exit
fi

TMPFILE=/tmp/.$RANDOM

if [ -z $DEST ]; then
  DEST=/sw/spack/`date -Idate`
fi

rm -rf failures.log ~/.intel ~/.spack

if [ ! -d $DEST ];then
  git clone https://github.com/spack/spack $DEST
  cp modules.yaml $DEST/etc/spack/
  cp packages.yaml $DEST/etc/spack/
  cp -a licenses $DEST/etc/spack/
fi

rm -f $DEST/etc/spack/compilers.yaml

source $DEST/share/spack/setup-env.sh

module purge

# If a directory is given, search for specs
if [ -d $SRC ]; then
  {
    source  $SRC/share/spack/setup-env.sh
    spack find -xv --no-groups --show-full-compiler > $TMPFILE
  }
elif [ -f $SRC ]; then
  cp $SRC $TMPFILE
else
  echo Error using input source!
  exit
fi

while read compiler; do
   echo Installing compiler $compiler
   spack install $compiler
   spack load --first $compiler
   spack compiler find
   spack unload --all
   new_compiler=1
done < <( cat $TMPFILE | grep -oP '%[^\s]+' | sort -u | sed 's/%//' )

if [ $new_compiler ]; then
  spack compiler list
  cp ~/.spack/linux/compilers.yaml $DEST/etc/spack/
fi

while read spec; do
   spack install $spec || echo Error installing $spec >> failures.log
done < $TMPFILE 
echo

if [ -f failures.log ]; then
   cat failures.log
fi
